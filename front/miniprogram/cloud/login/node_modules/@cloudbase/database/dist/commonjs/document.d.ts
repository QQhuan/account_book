<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
import { IWatchOptions, DBRealtimeListener } from './typings/index';
export declare class DocumentReference {
    readonly id: string | number;
    readonly _transactionId: string;
    readonly projection: Object;
    private _apiOptions;
    set(data: Object): Promise<any>;
    update(data: Object): Promise<any>;
    delete(): Promise<any>;
    remove(): Promise<any>;
    get(): Promise<any>;
    field(projection: Object): DocumentReference;
    watch: (options: IWatchOptions) => DBRealtimeListener;
}
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
import { IWatchOptions, DBRealtimeListener } from './typings/index';
export declare class DocumentReference {
    readonly id: string | number;
    readonly projection: Object;
    set(data: Object, callback?: any): Promise<any>;
    update(data: Object, callback?: any): any;
    remove(callback?: any): Promise<any>;
    get(callback?: any): Promise<any>;
    field(projection: Object): DocumentReference;
    watch: (options: IWatchOptions) => DBRealtimeListener;
}
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
