<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
export declare class RegExp {
    $regularExpression?: {
        pattern?: string;
        options?: string;
    };
    constructor({ regexp, options }: {
        regexp: any;
        options: any;
    });
    parse(): {
        $regularExpression: {
            pattern: string;
            options: string;
        };
    };
    readonly _internalType: import("../utils/symbol").InternalSymbol;
}
export declare function RegExpConstructor(param: any): RegExp;
=======
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
export declare class RegExp {
    $regex: string;
    $options: string;
    constructor({ regexp, options }: {
        regexp: any;
        options: any;
    });
    parse(): {
        $regex: string;
        $options: string;
    };
    readonly _internalType: import("../utils/symbol").InternalSymbol;
}
export declare function RegExpConstructor(param: any): RegExp;
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
<<<<<<< Updated upstream
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
=======
>>>>>>> Stashed changes
